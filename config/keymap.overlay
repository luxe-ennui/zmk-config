/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#define default_layer 0
#define lower_layer 1
#define raise_layer 2
#define another_layer 3



/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ENT  |
//                    | GUI | LWR | SPC |   | SPC | RSE  | ALT |
                        bindings = <
   &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
   &kp LCTRL &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &kp LSHFT &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &lt another_layer RET
                  &kp LGUI &mo 1 &kp SPACE   &kp SPACE &mo 2 &kp RALT
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4   |  5  |   |  6  |  7    |  8  |  9  |  0  | BKSP |
// | BTCLR| BT1 | BT2 | BT3 | BT4  | BT5 |   |     |  UP   |     |     |     |      |
// | SHFT |CAPS |     |     |      |     |   | LFT | DWN   | RGT |     |     | ESC  |
//                    | GUI | tog1 | SPC |   | SPC | tog 3 | ALT |
                        bindings = <
   &kp TAB    &kp N1       &kp N2       &kp N3       &kp N4       &kp N5        &kp N6    &kp N7   &kp N8    &kp N9    &kp N0 &kp BSPC
   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4  &trans    &kp UP   &trans    &trans    &trans &trans
   &kp LSHFT  &kp CAPSLOCK &trans       &trans       &trans       &trans        &kp LEFT  &kp DOWN &kp RIGHT &trans    &trans &kp ESC
                          	            &kp LGUI     &tog 1       &kp SPACE     &kp SPACE &tog 3   &kp RALT
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | SPC |     | ALT |
                        bindings = <
   &kp  TAB  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &kp BSPC
   &kp LCTRL &trans   &trans &trans   &trans   &trans      &kp MINUS &kp EQUAL &kp LBKT        &kp RBKT &kp BSLH &kp GRAVE
   &kp LSHFT &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC        &kp RBRC &kp PIPE &kp TILDE
                    	       &kp LGUI &trans   &kp SPACE   &kp SPACE &trans    &kp RALT
                        >;
                };
                 another_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !   |  @  |  #   |  $   |  %    |   |  1   |  2  |  3  |  *  |  )  | BKSP |
// | CTRL | CAPS |     |      |  UP  |       |   |  4   |  5  |  6  |  +  |  \  |  `   |
// | SHFT |      |     | LEFT | DOWN | RIGHT |   |  7   |  8  |  9  |  =  |  *  |  ~   |
//                     | GUI  |      | SPC   |   | tog3 |  0  | ALT |
                        bindings = <
   &kp  TAB  &kp EXCL     &kp AT &kp HASH   &kp DLLR &kp PRCNT   &kp KP_N1 &kp KP_N2 &kp KP_N3 &kp LPAR  &kp RPAR        &kp BSPC
   &kp LCTRL &kp CAPSLOCK &trans &kp UP     &trans   &trans      &kp KP_N4 &kp KP_N5 &kp KP_N6 &kp PLUS  &kp BSLH        &kp GRAVE
   &kp LSHFT &trans       &trans &kp RIGHT  &kp DOWN &kp LEFT    &kp KP_N7 &kp KP_N8 &kp KP_N9 &kp EQUAL &kp KP_MULTIPLY &kp TILDE
                    	           &kp LGUI   &trans   &kp SPACE   &tog 3    &KP_N0    &kp RALT
                };
        };
};
